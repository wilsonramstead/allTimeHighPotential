{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","HomeComponent","http","getScreenSize","assetType","allAssets","totalCurrentValue","totalATHvalue","pricesDictionary","newAsset","previousALTvalue","parseFloat","String","Number","assetAmount","assetName","toFixed","todayAssetPrice","todayValue","push","input","selectedOption","get","subscribe","data","results","event","screenHeight","window","innerHeight","screenWidth","innerWidth","mobile","addAsset","clearAssets","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'public';\n}\n","\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\n\n<div class=\"mainContainer\">\n  <app-home></app-home>\n</div>\n\n<!-- <router-outlet></router-outlet> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { __await } from 'tslib';\nimport { HostListener } from \"@angular/core\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  mobile: any;\n  screenHeight: number;\n  screenWidth: number;\n  allAssets: any;\n  newAsset: any;\n  pricesDictionary: any;\n  totalCurrentValue: any;\n  totalATHvalue: any;\n  assetType: any;\n\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getScreenSize();\n    this.assetType = 'stock';\n    this.allAssets = [];\n    this.totalCurrentValue = 0;\n    this.totalATHvalue = 0;\n    this.pricesDictionary = { 'Apple': [180.96, 0, 'AAPL'], 'atom': [44.45, 0], 'Avalanche': [144.96, 0, 'X:AVAXUSD'], 'Bitcoin': [69044.77, 0, 'X:BTCUSD'], 'Cardano': [3.09, 0, 'X:ADAUSD'], 'Ethereum': [4878.26, 0, 'X:ETHUSD'], 'Facebook': [382.18, 0, 'META'], 'Microsoft': [339.89, 0, 'MSFT'], 'Nvidia': [333.49, 0, 'NVDA'], 'Polygon': [2.92, 0, 'X:MATICUSD'], 'Solana': [259.96, 0, 'X:SOLUSD'], 'Sand': [8.40, 0, 'X:SANDUSD'], 'Tesla': [409.97, 0, 'TSLA'], 'Unity': [201.12, 0, 'U'], 'Vechain': [0.280991, 0, 'X:VETUSD']}\n    this.newAsset = { 'assetName': '', 'assetAmount': 0, 'todayValue': 0, 'previousATHvalue': 0,}\n  }\n  addAsset() {\n    this.newAsset.previousALTvalue = parseFloat(String(Number(this.newAsset.assetAmount) * Number(this.pricesDictionary[this.newAsset.assetName][0]))).toFixed(2);\n    this.totalATHvalue = parseFloat(String(Number(this.totalATHvalue) + Number(this.newAsset.previousALTvalue))).toFixed(2);\n    this.newAsset.todayAssetPrice = parseFloat(String(this.pricesDictionary[this.newAsset.assetName][1])).toFixed(2);\n    this.newAsset.todayValue = parseFloat(String(this.newAsset.assetAmount * this.pricesDictionary[this.newAsset.assetName][1])).toFixed(2);\n    this.totalCurrentValue = parseFloat(String(Number(this.totalCurrentValue) + Number(this.newAsset.todayValue))).toFixed(2);\n    this.allAssets.push(this.newAsset);\n    this.newAsset = { 'assetName': '', 'assetAmount': 0, 'todayValue': 0, 'previousATHvalue': 0,}\n  }\n  changeAssetType(input) {\n    this.assetType = input;\n  }\n  clearAssets() {\n    this.allAssets = [];\n    this.totalCurrentValue = 0;\n    this.totalATHvalue = 0;\n  }\n  getPriceInfo(selectedOption) {\n    this.http.get<any>('https://api.polygon.io/v2/aggs/ticker/' + this.pricesDictionary[selectedOption][2] + '/prev?adjusted=true&apiKey=ZniEFUGxWV3dk4HeEpD5vQoVE2J56qbc', {}).subscribe(data => {\n      this.pricesDictionary[selectedOption][1] = data.results[0]['c']; // this is returning the close price of previous day close price, api reference: https://polygon.io/docs/crypto/get_v2_aggs_ticker__cryptoticker__prev\n    });\n   }\n   @HostListener('window:resize', ['$event'])\n   getScreenSize(event?) {\n         this.screenHeight = window.innerHeight;\n         this.screenWidth = window.innerWidth;\n         if(this.screenWidth >= 641) {\n           this.mobile = 'no'\n         } else {\n           this.mobile = 'yes'\n         }\n   }\n}\n","\n<div class=\"homeContainer\">\n    <div class=\"header\">\n        <h1>See Your All Time High Potential</h1>\n        <hr>\n        <p>Select your stock/crypto below and input your share amount.</p>\n    </div>\n    <div class=\"innerBox\">\n        <form>\n            <div class=\"assetForm\">\n                <div class=\"upperSection\">\n                    <h4 *ngIf=\"assetType == 'stock'\" class=\"fancyLabel\">Stock</h4>\n                    <button *ngIf=\"assetType == 'stock'\" class=\"buttonNormal\" (click)=\"changeAssetType('crypto')\">Switch to Crypto</button>\n                    <h4 *ngIf=\"assetType == 'crypto'\" class=\"fancyLabel\">Crypto</h4>\n                    <button *ngIf=\"assetType == 'crypto'\" class=\"buttonNormal\" (click)=\"changeAssetType('stock')\">Switch to Stock</button>\n                </div>\n                <div class=\"assetInput\">\n                    <div class=\"left\">\n                        <h6>Asset Name:</h6>\n                    </div> \n                    <div class=\"right\">\n                        <select *ngIf=\"assetType == 'stock'\" (change)=\"getPriceInfo($event.target.value)\" [(ngModel)]=\"newAsset.assetName\" name=\"newAsset.assetName\" required>\n                            <option value=\"Apple\">Apple</option>\n                            <option value=\"Microsoft\">Microsoft</option>\n                            <option value=\"Facebook\">Facebook</option>\n                            <option value=\"Nvidia\">Nvidia</option>\n                            <option value=\"Tesla\">Tesla</option>\n                            <option value=\"Unity\">Unity</option>\n                        </select>\n                        <select *ngIf=\"assetType == 'crypto'\" (change)=\"getPriceInfo($event.target.value)\" [(ngModel)]=\"newAsset.assetName\" name=\"newAsset.assetName\" required>\n                            <option value=\"Atom\">Cosmos Hub (Atom)</option>\n                            <option value=\"Avalanche\">Avalanche</option>\n                            <option value=\"Bitcoin\">Bitcoin</option>\n                            <option value=\"Cardano\">Cardano</option>\n                            <option value=\"Ethereum\">Ethereum</option>\n                            <option value=\"Polygon\">Polygon</option>\n                            <option value=\"Sand\">Sand</option>\n                            <option value=\"Solana\">Solana</option>\n                            <option value=\"Vechain\">Vechain</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"assetInput\">\n                    <div class=\"left\">\n                        <h6>Amount:</h6>\n                    </div>\n                    <div class=\"right\">\n                        <input type=\"number\" [(ngModel)]=\"newAsset.assetAmount\" name=\"newAsset.assetAmount\" required/>\n                    </div>\n                </div>\n                <div class=\"assetButtons\">\n                    <button class=\"buttonGreen\" (click)=\"addAsset()\">Go</button>\n                    <button class=\"buttonRed\" (click)=\"clearAssets()\">Clear Assets</button>\n                </div>\n            </div>\n        </form>\n        <!-- <hr> -->\n        <br>\n        <h4 class=\"fancyLabel\">Your Asset List:</h4>\n\n        <div *ngIf=\"mobile == 'no'\" class=\"container\">\n            <div class=\"row headerColumn\" style=\"border-bottom: 3px solid black;\"> \n                <div class=\"col\"><h6>Name</h6></div>\n                <div class=\"col\"><h6>ATH Price</h6></div>\n                <div class=\"col\"><h6>Current Price</h6></div>\n                <div class=\"col\"><h6>Your Share #</h6></div>\n                <div class=\"col\"><h6>Current Value</h6> </div>\n                <div class=\"col\"><h6>PV (ATH)</h6></div>\n            </div>\n            <div *ngFor=\"let asset of allAssets; let i = index\" class=\"row\">\n                <div class=\"col\"><h6><strong>{{ asset['assetName'] }}</strong></h6></div>\n                <div class=\"col\"><h6>${{ asset['todayAssetPrice'] }}</h6></div>\n                <div class=\"col\"><h6>${{ pricesDictionary[asset['assetName']][0] }}</h6></div>\n                <div class=\"col\"><h6>{{ asset['assetAmount'] }}</h6></div>\n                <div class=\"col\"><h6>${{ asset['todayValue'] }}</h6> </div>\n                <div class=\"col\"><h6>${{ asset['previousALTvalue'] }}</h6> </div>\n            </div>\n            <div class=\"row headerColumn\" style=\"border-top: 3px solid black;\">\n                <div class=\"col\"><h6></h6></div>\n                <div class=\"col\"><h6></h6></div>\n                <div class=\"col\"><h6></h6></div>\n                <div class=\"col\"><h6>Total:</h6></div>\n                <div class=\"col\"><h6>{{ totalCurrentValue }}</h6></div>\n                <div class=\"col\"><h6>{{ totalATHvalue }}</h6></div>\n            </div>\n        </div>\n\n        <div *ngIf=\"mobile == 'yes'\" class=\"mobileContainer\">\n            <div *ngFor=\"let asset of allAssets; let i = index\">\n                <div class=\"row\" style=\"border-bottom: 2px solid black; padding-bottom: 1px; background: rgba(255, 255, 255, 0.466);\">\n                    <div class=\"col\" style=\"border-right: 2px solid black\"><h6><strong>Name</strong></h6></div>\n                    <div class=\"col\"><h6><strong>{{ asset['assetName'] }}</strong></h6></div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\" style=\"border-right: 2px solid black\"><h6>Current Price</h6></div>\n                    <div class=\"col\"><h6>${{ asset['todayAssetPrice'] }}</h6></div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col\" style=\"border-right: 2px solid black\"><h6>ATH Price</h6></div>\n                    <div class=\"col\"><h6>${{ pricesDictionary[asset['assetName']][0] }}</h6></div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col\" style=\"border-right: 2px solid black\"><h6>Holdings Amount</h6></div>\n                    <div class=\"col\"><h6>{{ asset['assetAmount'] }}</h6></div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col\" style=\"border-right: 2px solid black\"><h6>Current Value</h6></div>\n                    <div class=\"col\"><h6>${{ asset['todayValue'] }}</h6></div>\n                </div>\n\n                <div class=\"row\" style=\"border-bottom: 2px solid black; padding-bottom: 1px;\">\n                    <div class=\"col\" style=\"border-right: 2px solid black\"><h6>Potential Value</h6></div>\n                    <div class=\"col\"><h6>${{ asset['previousALTvalue'] }}</h6></div>\n                </div>\n            </div>\n            <div class=\"row\" style=\"border-bottom: 2px solid black; padding-bottom: 1px; background: rgba(255, 255, 255, 0.466);\">\n                <div class=\"col\" style=\"border-right: 2px solid black;\"><h6><strong>Total Current Value</strong></h6></div>\n                <div class=\"col\"><h6><strong>${{ totalCurrentValue }}</strong></h6></div>\n            </div>\n            <div class=\"row\" style=\"border-bottom: 2px solid black; padding-bottom: 1px; background: rgba(255, 255, 255, 0.466);\">\n                <div class=\"col\" style=\"border-right: 2px solid black;\"><h6><strong>Total Potential Value</strong></h6></div>\n                <div class=\"col\"><h6><strong>${{ totalATHvalue }}</strong></h6></div>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}